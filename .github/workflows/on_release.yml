name: On release

on:
  push:
    tags:
      - '**'

jobs:  
  build_windows:
    runs-on: windows-latest
    outputs:
      build: ${{ steps.verify.outputs.build }}
    steps:
      - uses: actions/checkout@v4
      - name: Install
        uses: ./.github/actions/install

      - uses: baptiste0928/cargo-install@v2
        with:
          crate: tauri-cli
          version: "1.5.9"

      - run: 'moon ci :build --base ${{ github.sha }}^'
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
 
      - id: verify
        if: hashFiles('.cargo/.target/release/bundle/msi/docviewer_**_x64_en-US.msi.zip') != ''
        run: echo "build=ok" >> $env:GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        if: hashFiles('.cargo/.target/release/bundle/msi/docviewer_**_x64_en-US.msi.zip') != ''
        with:
          path: '.cargo/.target/release/bundle/msi/**'
          name: 'docviewer_msi'
          if-no-files-found: ignore
          retention-days: 15 days

  release:
    runs-on: ubuntu-latest
    needs: build_windows
    if: ${{ needs.build_windows.outputs.build == 'ok'}}
    steps:
      - uses: actions/checkout@v4
      - name: Install
        uses: ./.github/actions/install

      - uses: actions/download-artifact@v4
        with:
          path: '.cargo/.target/release/bundle/msi'
          name: 'docviewer_msi'

      - run: cd ./.cargo/.target/release/bundle/msi && ls

      - run: |
          cd docviewer
          VERSION=$(cargo metadata --format-version=1 --no-deps | jq -r '.packages[] | select(.name == "docviewer") | .version' | tr -d '"')
          echo VERSION: $VERSION
          echo "DOCVIEWER_VERSION=$VERSION" >> $GITHUB_ENV

      #- run: cat .cargo/.target/release/bundle/msi/docviewer_${{ env.DOCVIEWER_VERSION }}_x64_en-US.msi.zip

      #- run: |
      #    SIG=$(cat .cargo/.target/release/bundle/msi/docviewer_${{ env.DOCVIEWER_VERSION }}_x64_en-US.msi.zip)
      #    echo $SIG

      #- run: |
      #    SIG=$(cat .cargo/.target/release/bundle/msi/docviewer_${{ env.DOCVIEWER_VERSION }}_x64_en-US.msi.zip)
      #    echo "DOCVIEWER_MSI_SIG=$SIG" >> $GITHUB_ENV

      #- run: |
      #    sed -e '$a\' .cargo/.target/release/bundle/msi/docviewer_${{ env.DOCVIEWER_VERSION }}_x64_en-US.msi.zip
      #    {
      #      echo 'DOCVIEWER_MSI_SIG<<EOF'
      #      cat .cargo/.target/release/bundle/msi/docviewer_${{ env.DOCVIEWER_VERSION }}_x64_en-US.msi.zip
      #      echo EOF
      #    } >> $GITHUB_OUTPUT

      #- run: echo bbbb ${{ env.DOCVIEWER_MSI_SIG }}

      - run: |
          SIG=$(cat .cargo/.target/release/bundle/msi/docviewer_${{ env.DOCVIEWER_VERSION }}_x64_en-US.msi.zip.sig)
          moon generate autoupdate ./docviewer/ --defaults -- --version ${{ env.DOCVIEWER_VERSION }} --win_sig $SIG
          cat ./docviewer/autopdate.json

      

      #- uses: softprops/action-gh-release@v1
      #  if: hashFiles('.cargo/.target/release/bundle/msi/docviewer_**_x64_en-US.msi') != ''
      #  with:
      #    files: .cargo/.target/release/bundle/msi/docviewer_**_x64_en-US.msi